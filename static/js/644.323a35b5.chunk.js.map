{"version":3,"file":"static/js/644.323a35b5.chunk.js","mappings":"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","sources":["static/til/til_20250217.tsx"],"sourcesContent":["import React from 'react';\n\nconst TIL20250217: React.FC = () => {\n    return (\n        <>\n            <h2>20250217 TIL</h2>\n            <article>\n                <h3>if문</h3>\n                <ul>\n                    <li>if문은 주어진 조건식의 참/거짓 여부에 따라 실행이 결정</li>\n                    <li>조건식이 참일 때 코드블록 내부의 코드가 실행</li>\n                </ul>\n\n                <h3>동치연산자 (===)</h3>\n                <ul>\n                    <li>두 피연산자가 동일하면 true 아니면 false를 반환</li>\n                    <li>!==는 반대로 동일하면 false 아니면 true를 반환</li>\n                </ul>\n\n                <h3>비교연산자 (&gt;, &lt;, &gt;=, &lt;=)</h3>\n                <ul>\n                    <li>비교연산자는 두 피연산자의 값의 크기를 비교</li>\n                </ul>\n\n                <h3>논리연산자 (&&, ||)</h3>\n                <ul>\n                    <li>논리합과 논리곱을 사용하면 복수의 조건을 작성할 수 있다</li>\n                    <li>||은 여러 조건 중 하나만 true여도 true로 반환</li>\n                    <li>&&은 여러 조건 중 하나라도 false면 false로 반환</li>\n                </ul>\n\n                <h3>부정연산자 (!)</h3>\n                <ul>\n                    <li>부정연산자는 조건을 부정</li>\n                    <li>조건이 true이면 false, 조건이 false이면 true를 반환</li>\n                </ul>\n\n                <h3>else문</h3>\n                <ul>\n                    <li>조건식이 true나 false일 때 각각 다른 코드가 실행되도록 해준다</li>\n                    <li>else는 독립적으로 사용할 수 없고 if문 바로 뒤에 작성해야 한다</li>\n                    <li>조건을 더 추가하고 싶으면 else if문을 사용한다</li>\n                    <li>if문과 else문은 두 번 이상 사용할 수 없지만 else if문은 여러 번 사용 가능하다</li>\n                </ul>\n\n                <h3>삼항 조건 연산자</h3>\n                <ul>\n                    <li>if문과 else문을 삼항 조건 연산자로 바꿔 쓸 수 있다</li>\n                    <li>삼항 조건 연산자는 조건식을 먼저 작성한 후 ?를 입력</li>\n                    <li>?를 뒤로 참/거짓일 때 실행할 코드를 각각 입력</li>\n                    <li>참/거짓일 때 실행할 코드는 :로 구분</li>\n                    <li>else if가 들어갈 거면 그냥 if문을 사용하는 것이 낫다</li>\n                </ul>\n            </article>\n\n            <article>\n                <h3>for문</h3>\n                <ul>\n                    <li>for문을 사용하면 코드를 몇 번 반복하여 실행할 지 결정할 수 있다</li>\n                    <li>for 뒤에 오는 소괄호에는 각각 초기값, 조건식, 증감식이 들어간다</li>\n                    <ul>\n                        <li>초기값: 증감식 반복 횟수를 카운트하는 역할을 하는 변수</li>\n                        <li>조건식: 코드블록 내부의 실행 여부를 결정 true일 경우에는 코드를 실행, false일 경우 반복문 종료</li>\n                        <li>증감식: 코드블록 내부의 코드를 실행한 후 초기값으로 선언된 변수를 증가 또는 감소시키기 위한 표현식</li>\n                    </ul>\n                    <li>이중 반복문으로 사용할 수 있다</li>\n                </ul>\n\n                <h3>인덱스</h3>\n                <ul>\n                    <li>문자의 각 문자는 순서를 가지고 있다</li>\n                    <li>첫 번째 문자의 인덱스는 0이다</li>\n                    <li>특정 문자의 인덱스를 확인하는 메서드는 indexOf()이다</li>\n                    <li>만약 찾는 문자가 2개 이상일 경우 가장 앞에 있는 문자의 인덱스를 조회</li>\n                </ul>\n\n                <h3>길이</h3>\n                <ul>\n                    <li>문자열의 길이는 문자열 뒤에 .length를 붙임으로써 조회할 수 있다</li>\n                    <li>문자의 마지막 문자의 인덱스는 문자열의 길이보다 1만큼 작다</li>\n                </ul>\n\n                <h3>while문</h3>\n                <ul>\n                    <li>조건식만 입력한 후 조건식의 평가결과가 true인 경우 코드블록 내부의 코드를 반복하여 실행</li>\n                    <li>while문을 사용할 때는 무한루프를 주의해야 한다</li>\n                    <li>무한루프란 반복문이 종료되는 조건식이 항상 참으로 평가되어 무한히 반복되는 현상</li>\n                </ul>\n\n                <h3>do…while문</h3>\n                <ul>\n                    <li>do…while문은 while 뒤에 오는 조건식이 true로 평가되는 동안 뒤에 오는 코드블록 내부의 코드를 반복하여 실행</li>\n                    <li>이 경우 do의 코드블록 내부의 코드가 최소 한번은 실행</li>\n                </ul>\n\n                <h3>for문을 사용하는 경우</h3>\n                <ul>\n                    <li>반복 횟수가 비교적 명확할 때</li>\n                    <li>배열, 문자열 내부를 순회할 때</li>\n                    <li>반복문의 중첩이 필요할 때</li>\n                </ul>\n\n                <h3>while문을 사용하는 경우</h3>\n                <ul>\n                    <li>반복 횟수가 명확하지 않을 때</li>\n                </ul>\n            </article>\n\n            <article>\n                <h3>switch 문</h3>\n                <ul>\n                    <li>조건에 따라 여러 코드 블록 중 하나를 선택해서 실행하는 제어문</li>\n                    <li>주로 여러 값에 대해 분기 처리가 필요할 때 유용하게 사용</li>\n                </ul>\n                <h3>구성요소</h3>\n                <ul>\n                    <li>switch 문 뒤에 나오는 표현식 값은 이 값과 각 case 값들을 비교한다</li>\n                    <li>case value : 표현식과 비교할 값. case 뒤의 값과 표현식 값이 같으면 해당 코드 블록을 실행</li>\n                    <li>break : 각 case가 끝나고 switch문을 종료하는 명령어</li>\n                    <li>break가 없으면 fall-through 현상이 발생하여 그 다음 case를 실행</li>\n                    <li>default : case 값들이 모두 일치하지 않으면 실행될 기본 코드</li>\n                    <li>이 부분은 선택사항이며 default가 없다면 일치하는 값이 없을 경우 아무 것도 실행되지 않는다</li>\n                    <li>switch문은 엄격 동등 비교가 사용되기 때문에 타입도 일치해야 한다</li>\n                    <li>다중 case가 동일한 처리를 할 때 break 없이 case를 이어서 쓸 수 있다</li>\n                </ul>\n            </article>\n        </>\n    );\n};\n\nexport default TIL20250217;\n"],"names":["TIL20250217","_jsxs","_Fragment","children","_jsx"],"sourceRoot":""}