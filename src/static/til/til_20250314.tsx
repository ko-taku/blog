// til_20250314.tsx

import React from 'react';

const TIL20250313: React.FC = () => {
    return (
        <div>
            <h2>20250313 TIL</h2>

            <section>
                <h3>블록체인 지갑</h3>
                <ul>
                    <li>개인 키와 공개 키를 관리하는 소프트웨어 혹은 하드웨어이다</li>
                    <li>지갑을 사용하면 블록체인 네트워크에서 암호화폐 전송, 수신, 서명 및 보관이 가능하다</li>
                    <li>지갑 주소 : 공개 키를 기반으로 생성된 사용자 계정 주소</li>
                </ul>
            </section>

            <section>
                <h3>핫 월렛 (Hot Wallet)</h3>
                <ul>
                    <li>특정 블록체인 네트워크에 최적화되어있으며 지원하는 코인과 토큰이 다를 수 있다</li>
                    <li>인터넷 주소가 네트워크에 연결되어 있어 온라인 상태에서 실시간으로 거래 정보를 주고 받을 수 있다</li>
                    <li>개인 키가 온라인에 노출되어 해킹 등 보안 문제에 취약하다</li>
                </ul>

                <h3>핫 월렛의 종류</h3>
                <ul>
                    <li>
                        <strong>웹 월렛</strong>
                        <ul>
                            <li>웹 기반으로 호스팅되는 지갑</li>
                            <li>사용자가 계정을 생성하고 보관할 수 있다</li>
                            <li>메타마스크, 카이아월렛이 대표적인 예시다</li>
                        </ul>
                    </li>
                    <li>
                        <strong>데스크톱 월렛</strong>
                        <ul>
                            <li>Windows, Mac, Linux 같은 OS에 다운로드하여 작동할 수 있는 애플리케이션</li>
                            <li>인터넷 연결이 차단된 상태에서 개인키를 생성하고 보관하면 콜드 월렛의 역할도 할 수 있다</li>
                            <li>웹 월렛보다는 불편하지만 필요 시 인터넷에 연결하여 거래가 가능하다</li>
                        </ul>
                    </li>
                    <li>
                        <strong>모바일 월렛</strong>
                        <ul>
                            <li>모바일 월렛은 데스크톱&웹 지갑의 모바일 형태이다</li>
                            <li>인터넷 접속 여부에 따라 핫 월렛 또는 콜드 월렛으로 작동할 수 있다</li>
                            <li>스마트폰 앱으로 다운로드해 사용할 수 있으며 언제 어디서나 거래가 가능하다</li>
                            <li>대표적으로 클립(Klip)이 있다</li>
                        </ul>
                    </li>
                </ul>
            </section>

            <section>
                <h3>콜드 월렛</h3>
                <ul>
                    <li>지갑의 개인 키를 오프라인으로 보관하는 지갑을 의미한다</li>
                    <li>인터넷에 연결되어있지 않기 때문에 오프라인 월렛이라고 부르기도 한다</li>
                    <li>해킹으로부터 안전하지만 물리적인 손실이나 복구 과정에서 보안 문제가 생길 수 있다</li>
                    <li>실시간 거래가 불가능해 불편하다는 단점도 있다</li>
                </ul>

                <h3>콜드 월렛의 종류</h3>
                <ul>
                    <li>
                        <strong>페이퍼 월렛</strong>
                        <ul>
                            <li>지갑 주소를 만들고 주소를 종이에 써서 보관하는 형식</li>
                            <li>암호화폐의 개인 키를 종이에 인쇄한 것</li>
                            <li>온라인 해킹 등의 위험에서 안전할 수 있지만 종이를 잃어버릴 위험이 있다는 특징이 있다</li>
                        </ul>
                    </li>
                    <li>
                        <strong>하드웨어 월렛</strong>
                        <ul>
                            <li>개인 키를 USB나 카드에 보관하는 방식</li>
                            <li>개인 키를 안전하게 보관하기 위해 고안된 장치를 의미</li>
                            <li>하드웨어 지갑을 다른 장치에 연결한 다음 사용자는 소프트웨어를 통해 자신의 잔고를 확인하거나 트랜잭션을 생성할 수 있다</li>
                        </ul>
                    </li>
                </ul>
            </section>

            <section>
                <h3>핫 월렛 VS 콜드 월렛</h3>
                <ul>
                    <li>거래를 자주 이용할 경우 핫 월렛이 편리하다</li>
                    <li>안전한 보관이 목적이라면 콜드 월렛이 바람직하다</li>
                    <li>대부분 중앙화 거래소(CEX)는 보안 강화를 위해 대다수의 자산을 콜드 월렛에 보관하고 일부 운영 자금을 핫 월렛에 보관한다</li>
                    <li>거래소는 자체 보유한 지갑에서 사용자의 요청에 따라 트랜잭션을 생성하여 출금을 처리한다</li>
                </ul>
            </section>

            <section>
                <h3>비결정적 월렛</h3>
                <ul>
                    <li>각 키가 독립적으로 생성되며 시드 없이 비밀키를 무작위로 생성하는 방식</li>
                    <li>동일한 개인키를 다시 생성할 수 없기 때문에 주소를 재사용하지 않는 것이 일반적이다</li>
                    <li>개별 키를 모두 백업해야하는 불편함이 있다</li>
                    <li>기본적으로 블록체인 상에서 트랜잭션을 생성할 때는 개인 정보 보호를 위해 암호화폐 주소를 재사용하지 않는 것이 권장된다</li>
                </ul>
            </section>

            <section>
                <h3>결정적(시드) 월렛</h3>
                <ul>
                    <li>하나의 시드에서 모든 비밀키를 파생하며 각 비밀키는 시드와 특정 인덱스의 조합으로 결정</li>
                    <li>시드만 알고 있다면 같은 키를 다시 생성할 수 있으므로 백업과 복구가 용이</li>
                    <li>모든 비밀키는 미리 결정된 값을 가지며 이를 통해 사용자는 하나의 시드만 관리하면 전체 지갑을 복구할 수 있다</li>
                </ul>
            </section>

            <section>
                <h3>HD 월렛</h3>
                <ul>
                    <li>BIP-32에서 제안되고 BIP-44에서 개선된 비트코인 표준이다</li>
                    <li>결정적 지갑의 한 종류로 계층 구조를 확용하여 키를 체계적으로 관리하는 방식이다</li>
                </ul>

                <h3>HD월렛 특징</h3>
                <ul>
                    <li>
                        <strong>결정적 특성</strong>
                        <ul>
                            <li>하나의 시드만 관리하면 모든 비밀키를 유도할 수 있어 백업 및 복구가 용이</li>
                            <li>비밀키를 개별적으로 관리할 필요가 없다</li>
                        </ul>
                    </li>
                    <li>
                        <strong>계층적 구조</strong>
                        <ul>
                            <li>HD 월렛의 주소는 트리 구조를 통해 생성</li>
                            <li>상위 키에서 하위 키를 유도하는 방식으로 확장</li>
                        </ul>
                    </li>
                </ul>
            </section>

            <section>
                <h3>BIP-32</h3>
                <p>HD 지갑을 처음 제안한 비트코인 표준입니다.</p>
            </section>

            <section>
                <h3>BIP-44</h3>
                <p>BIP-32를 확장하여 여러 개의 계정을 관리할 수 있도록 개선된 표준입니다.</p>
            </section>

            <section>
                <h3>니모닉</h3>
                <ul>
                    <li>니모닉은 BIP-39 표중에서 제안된 방식으로 난수를 12개 또는 24개의 영어 단어로 변환한 시드 복구 방법이다</li>
                    <li>기존의 시드키는 16진수 숫자 형태로 관리의 번거로움이 있었다</li>
                </ul>
            </section>

            <section>
                <h3>니모닉 코드와 시드 생성 9단계</h3>
                <ul>
                    <li>128bit 또는 256bit 길이의 난수를 생성한다</li>
                    <li>난수를 SHA-256 알고리즘으로 해싱하고, 해시값에서 (시드 키의 길이) / 32bit 만큼을 떼어낸다</li>
                    <li>체크섬을 난수의 뒤에 붙인다</li>
                    <li>체크섬을 붙인 난수를 11bit 단위로 잘라낸다</li>
                    <li>각 11bit의 단어를 사전에 정의된 단어로 치환한다</li>
                    <li>각 11bit의 순서를 유지하여 일련의 니모닉 코드를 만든다</li>
                </ul>
            </section>
        </div>
    );
}

export default TIL20250313;
